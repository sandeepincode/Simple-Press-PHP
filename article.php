<?php
/**
 * Auto-Generated by PhpStorm.
 * User: Junaid
 * Date: 07-Nov-16
 * Time: 5:43 PM
 */

// I think it's quite easy if the main function of our CMS i.e ARTICLE is defined
// in terms of article object, stay with me on this, you dont necessarily need to
// to copy this but when you see me using this, you'll get an idea of what i mean

class Article{
    public $id = null;
    public $publication = null;
    public $title = null;
    public $summary = null;
    public $content = null;
    public $image_id = null;
    public $tags = null;
    public $author = null;
    public $posted = null;

//    public $category_id = null; both these are tentative if we add categories or not

    // that's how php constructors are defined, stay with me
    //passing in data array and break it down and set all above variable values
    public function __construct($data = array()){

        if(isset($data['id']))
            $this->id = (int) $data['id'];

        if(isset($data['publication']))
            $this-> publication = $data['publication'];

        if(isset($data['title']))
            $this->title = preg_replace( "/[^\.\,\-\_\'\"\@\?\!\:\$ a-zA-Z0-9()]/", "", $data['title'] );

        if(isset($data['summary']))
            $this->summary = preg_replace( "/[^\.\,\-\_\'\"\@\?\!\:\$ a-zA-Z0-9()]/", "", $data['summary'] );

        if(isset($data['content']))
            $this->content = $data['content'];

        if(isset($data['tags']))
            $this->tags = $data['tags'];

        if(isset($data['author']))
            $this->author = $data['author'];

        if(isset($data['posted']))
            $this->posted = $data['posted'];
    }
    // this will fill in our values

    //this will call the constructor and fill in all the values
    //this is especially for the publication date value that's kinda of pain in the
    // butt. since we need to add date in a specific manner into the sql table
    // so i'm copying a solution from StackOverFlow as my last working resort

    public function storeFromValues($param){

        //the calling object fills itself using the constructor
        $this->__construct($param);

        //Parsing the date now
        if(isset($param['publication'])){
            $publication = explode('-', $param['publication']);
        }

        //listing variables as if they were an array
        if(count($publication) == 3) {
            list($y, $m, $d) = $publication;
            $this->publication = mktime(0, 0, 0, $m, $d, $y);
        }
    }
    // dont worry if this doesnt make sense, it doesnt to me either :D

    //////////////////////////////// now adding all GETTERS and SETTERS

    public static function getById($id){
        $conn = new mysqli(DB_SERVERNAME, DB_USERNAME, DB_PASSWORD, DB_NAME);
        if($conn->connect_error){
            die("Connection failed: ".$conn->connect_error);
        }

        $sql = "SELECT * FROM articles WHERE id = '$id'";
        $result = mysqli_query($conn, $sql);
        $row = mysqli_fetch_assoc($result);

        //ending connection
        $conn = null;
        // if row was returned it'll be true
        if($row)
            return new Article($row);
    }

    // get the latest five artilces as a demo
    public static function getList($limit = 5){

        $conn = new mysqli(DB_SERVERNAME, DB_USERNAME, DB_PASSWORD, DB_NAME);
        if($conn->connect_error){
            die("Connection failed: ".$conn->connect_error);
        }

        $sql = "select * from articles order by publication desc limit $limit";
        $result = mysqli_query($conn, $sql);

        //making new array
        $list = array();

        //adding all received articles to an array
        while($row = mysqli_fetch_assoc($result)){
            $article = new Article($row);
            $list[] = $article;
        }

        //ending connection mate !
        $conn = null;

        return(array("result"=>$list));
    }

    // inserting into article, hence database
    public function insert(){

        //checking if ID is set
        if(!is_null($this->id)){
            trigger_error("inserting article into ID: $this->id wasnt possible", E_USER_ERROR);
            // error type used above is standard
        }

        // else, inserting new article
        $conn = new mysqli(DB_SERVERNAME, DB_USERNAME, DB_PASSWORD, DB_NAME);
        if($conn->connect_error){
            die("Connection failed: ".$conn->connect_error);
        }

        $pub = $this->publication;
        $tit = $conn->real_escape_string(strip_tags($this->title));
        $sum = $conn->real_escape_string($this->summary);
        $con = $conn->real_escape_string(($this->content));
        $ta = $conn->real_escape_string(strip_tags($this->tags));
        $au = $conn->real_escape_string(strip_tags($this->author));
        $po = $conn->real_escape_string(strip_tags($this->posted));

        $sql_new = "INSERT INTO articles( publication, title, summary, content, tags, author, posted)
                    VALUES (FROM_UNIXTIME('$pub'),'$tit','$sum', '$con', '$ta', '$au', '$po' )";
        if(! mysqli_query($conn, $sql_new)){
         die();
        }

        //assign this article the unique id at which the last database entry was done
        //we can retrieve this from sql commands. googled this :D

        $this->id = $conn->insert_id;

        //endng connection
        $conn = null;
    }


    //updating an article if any changes were made to it.
    public function update(){

        //checking if ID is set
        if(is_null($this->id)){
            trigger_error("inserting article into ID: $this->id wasnt possible", E_USER_ERROR);
            // error type used above is standard
        }

        $conn = new mysqli(DB_SERVERNAME, DB_USERNAME, DB_PASSWORD, DB_NAME);
        if($conn->connect_error){
            die("Connection failed: ".$conn->connect_error);
        }

        $tit = $conn->real_escape_string(strip_tags($this->title));
        $pub = $this->publication;
        $sum = $conn->real_escape_string(strip_tags($this->summary));
        $con = $conn->real_escape_string(($this->content));
        $ta = $conn->real_escape_string(strip_tags($this->tags));
        $au = $conn->real_escape_string(strip_tags($this->author));
        $po = $conn->real_escape_string(strip_tags($this->posted));

        $sql = "UPDATE articles SET publication=FROM_UNIXTIME('$pub'), title='$tit', summary='$sum', content='$con', tags='$ta'
                , author='$au', posted = '$po' WHERE id = '$this->id'";
        mysqli_query($conn, $sql);

        //ending connection :P
        $conn = null;
    }

    // deleting an article
    public function delete(){
        if(is_null($this->id)){
            trigger_error("inserting article into ID: $this->id wasnt possible", E_USER_ERROR);
            // error type used above is standard
        }

        $conn = new mysqli(DB_SERVERNAME, DB_USERNAME, DB_PASSWORD, DB_NAME);
        if($conn->connect_error){
            die("Connection failed: ".$conn->connect_error);
        }

        $sql = "DELETE FROM articles where id = $this->id LIMIT 1";

        mysqli_query($conn, $sql);

        $conn = null;
    }

    public static function getTags($string){
        if(is_null($string))
            trigger_error("Attempt to search tag ".$string." unsuccessful", E_USER_ERROR);

        $string = str_replace(' ', '', $string);
        $tags = explode(',',$string);

        return $tags;
    }

    public static function searchTags($target = 'tag'){
        $conn = new mysqli(DB_SERVERNAME, DB_USERNAME, DB_PASSWORD, DB_NAME);
        $sql = "select * from articles";
        $res = mysqli_query($conn, $sql);

        $id_array = array();
        $taglist = array();
        $final = array();

        while($row = mysqli_fetch_assoc($res)){
            $taglist = Article::getTags($row['tags']);

            foreach($taglist as $item){
                if(strcmp($target, $item) == 0)
                    $id_array[] = $row['id'];
            }
        }

        foreach($id_array as $id){
            $sql = "select * from articles where id = '$id'";
            $result = mysqli_query($conn, $sql);
            $article = new Article(mysqli_fetch_assoc($result));
            $final[] = $article;
        }

        $conn = null;

        return $final;
    }

    public static function getAuthors(){
        $conn = new mysqli(DB_SERVERNAME, DB_USERNAME, DB_PASSWORD, DB_NAME);
        $sql = "select * from userbase";
        $results = mysqli_query($conn, $sql);

        $list = array();

        while($row=mysqli_fetch_assoc($results)){
            $list[] = $row['name'];
        }
        return $list;
    }

    // END OF DOCUMENT
}
?>
